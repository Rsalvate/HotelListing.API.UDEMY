// <auto-generated />
using HotelListing.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListing.API.Migrations
{
    [DbContext(typeof(HotelListingDbContext))]
    [Migration("20220412165505_seedingData")]
    partial class seedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelListing.API.Data.Entity.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jamaica",
                            ShortName = "JM"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brazil",
                            ShortName = "BR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "England",
                            ShortName = "ENG"
                        });
                });

            modelBuilder.Entity("HotelListing.API.Data.Entity.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "42 Chive Road",
                            CountryId = 3,
                            Name = "Heaney-Pollich",
                            Rating = 1.2
                        },
                        new
                        {
                            Id = 2,
                            Address = "9 Aberg Court",
                            CountryId = 2,
                            Name = "Wuckert Group",
                            Rating = 2.1000000000000001
                        },
                        new
                        {
                            Id = 3,
                            Address = "84 Thompson Crossing",
                            CountryId = 2,
                            Name = "Hermiston-Turcotte",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = 4,
                            Address = "70 Stephen Place",
                            CountryId = 1,
                            Name = "Will-Keebler",
                            Rating = 3.3999999999999999
                        },
                        new
                        {
                            Id = 5,
                            Address = "52 Stephen Way",
                            CountryId = 3,
                            Name = "Schuppe-Kovacek",
                            Rating = 1.3999999999999999
                        },
                        new
                        {
                            Id = 6,
                            Address = "902 Tony Trail",
                            CountryId = 3,
                            Name = "Dietrich, Berge and Deckow",
                            Rating = 4.5999999999999996
                        },
                        new
                        {
                            Id = 7,
                            Address = "9968 Bayside Alley",
                            CountryId = 3,
                            Name = "Monahan, O'Reilly and Greenholt",
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 8,
                            Address = "5846 Debra Plaza",
                            CountryId = 2,
                            Name = "Christiansen-Huel",
                            Rating = 4.9000000000000004
                        },
                        new
                        {
                            Id = 9,
                            Address = "99440 Melrose Crossing",
                            CountryId = 3,
                            Name = "Emmerich, Gutkowski and MacGyver",
                            Rating = 2.8999999999999999
                        },
                        new
                        {
                            Id = 10,
                            Address = "1490 Cardinal Street",
                            CountryId = 3,
                            Name = "Toy Group",
                            Rating = 1.5
                        });
                });

            modelBuilder.Entity("HotelListing.API.Data.Entity.Hotel", b =>
                {
                    b.HasOne("HotelListing.API.Data.Entity.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListing.API.Data.Entity.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
